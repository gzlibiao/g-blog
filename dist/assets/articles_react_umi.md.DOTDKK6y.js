import{_ as i,o as a,c as t,a6 as e}from"./chunks/framework.DxlwMnnj.js";const c=JSON.parse('{"title":"umi","description":"","frontmatter":{"tag":["react","前端"]},"headers":[],"relativePath":"articles/react/umi.md","filePath":"articles/react/umi.md"}'),p={name:"articles/react/umi.md"};function l(n,s,h,r,k,d){return a(),t("div",{"data-pagefind-body":!0},s[0]||(s[0]=[e(`<h1 id="umi" tabindex="-1">umi <a class="header-anchor" href="#umi" aria-label="Permalink to &quot;umi&quot;">​</a></h1><h3 id="环境搭建" tabindex="-1">环境搭建 <a class="header-anchor" href="#环境搭建" aria-label="Permalink to &quot;环境搭建&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>yarn create @umijs/umi-app</span></span></code></pre></div><h3 id="目录说明" tabindex="-1">目录说明 <a class="header-anchor" href="#目录说明" aria-label="Permalink to &quot;目录说明&quot;">​</a></h3><p>mock src .umirc.js 配置文件 同 config.js .env 环境变量 dist 输出目录 public 无需打包的资源 wrappers 权限管理 models 数据流 layouts 全局布局 app.js 运行时配置文件 pages 页面目录 global.css 全局样式 global.js 全局 pollyjs</p><h3 id="使用图片资源的方式" tabindex="-1">使用图片资源的方式 <a class="header-anchor" href="#使用图片资源的方式" aria-label="Permalink to &quot;使用图片资源的方式&quot;">​</a></h3><p>1 assets 目录下</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;../assets/imgs/userBj.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{user} /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;../assets/imgs/userBj.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)} /&gt;</span></span></code></pre></div><p>2 public 目录下</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/img/bg.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><p>3 服务器资源</p><p>镜像管理 yrm yrm ls yrm test yrm use taobao</p>`,12)]))}const g=i(p,[["render",l]]);export{c as __pageData,g as default};
