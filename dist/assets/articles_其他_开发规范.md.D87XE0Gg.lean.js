import{_ as s,o as i,c as e,a6 as n}from"./chunks/framework.DxlwMnnj.js";const c=JSON.parse('{"title":"Vue 代码开发规范(新)","description":"","frontmatter":{"tag":["开发体验"]},"headers":[],"relativePath":"articles/其他/开发规范.md","filePath":"articles/其他/开发规范.md"}'),t={name:"articles/其他/开发规范.md"};function l(h,a,p,r,k,o){return i(),e("div",{"data-pagefind-body":!0},a[0]||(a[0]=[n(`<h1 id="vue-代码开发规范-新" tabindex="-1">Vue 代码开发规范(新) <a class="header-anchor" href="#vue-代码开发规范-新" aria-label="Permalink to &quot;Vue 代码开发规范(新)&quot;">​</a></h1><h2 id="_1-项目规范" tabindex="-1">1.项目规范 <a class="header-anchor" href="#_1-项目规范" aria-label="Permalink to &quot;1.项目规范&quot;">​</a></h2><h3 id="_1-1-新建项目" tabindex="-1">1.1 新建项目 <a class="header-anchor" href="#_1-1-新建项目" aria-label="Permalink to &quot;1.1 新建项目&quot;">​</a></h3><p>【强制】PC 端新建项目全部使用 vue(复制 vue-template 项目)。 【缺失】wap-template</p><h3 id="_1-2-环境变量" tabindex="-1">1.2 环境变量 <a class="header-anchor" href="#_1-2-环境变量" aria-label="Permalink to &quot;1.2 环境变量&quot;">​</a></h3><p>【强制】必须有.env.dev(开发+测试)、.env.development(本地)、.env.production(生产)。参考 vue-template 【强制】其他环境让运维添加：如.env.proyd(义东环境) 【参考】环境一般包含下面几个统一域名，详见统一域名规范</p><h3 id="_1-3-目录结构【参考】" tabindex="-1">1.3 目录结构【参考】 <a class="header-anchor" href="#_1-3-目录结构【参考】" aria-label="Permalink to &quot;1.3 目录结构【参考】&quot;">​</a></h3><h3 id="_1-4-版本规范" tabindex="-1">1.4 版本规范 <a class="header-anchor" href="#_1-4-版本规范" aria-label="Permalink to &quot;1.4 版本规范&quot;">​</a></h3><p>应在项目 package.json 指定本次发布对应的版本，后续会在版本信息采集中使用</p><h3 id="_1-5-referrer-policy-规范" tabindex="-1">1.5 Referrer Policy 规范 <a class="header-anchor" href="#_1-5-referrer-policy-规范" aria-label="Permalink to &quot;1.5 Referrer Policy 规范&quot;">​</a></h3><p>浏览器默认会请求头加上 rereferrer 字段，为了安全因素和节省流量，需要主动去掉，方式为在 head 里添加一个 meta</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;referrer&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;no-referrer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">如果遇到第三方服务的js需要验证referrer，可在标签中单独设置</span></span></code></pre></div><h2 id="_2-命名规范" tabindex="-1">2.命名规范 <a class="header-anchor" href="#_2-命名规范" aria-label="Permalink to &quot;2.命名规范&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[原则] 除了公共组件，项目内不允许使用前缀</span></span>
<span class="line"><span>[原则] 名称拼接不的超过3个单词</span></span></code></pre></div><h3 id="_2-1-项目及路由命名" tabindex="-1">2.1 项目及路由命名 <a class="header-anchor" href="#_2-1-项目及路由命名" aria-label="Permalink to &quot;2.1 项目及路由命名&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>【强制】项目名采用小写方式， 以中划线分隔，如vue-org，wap-oa，公共组件用jzb-**。</span></span>
<span class="line"><span>反例：vue_org、vueOrg</span></span>
<span class="line"><span>【推荐】项目名最好一个单词，如果被占用就使用近义词，实在没单词就是首字母缩写+关键词，</span></span>
<span class="line"><span>比如工程档宝，语义engine-file，项目名vue-file被占用，可以使用近义词vue-document、vue-efile</span></span>
<span class="line"><span>【强制】设置vue.config.js的publicPath为&#39;/项目名/&#39;，比如template项目 publicPath: &#39;/template/&#39;,</span></span>
<span class="line"><span>【强制】路由文件设置统一base属性为&#39;/项目名&#39;，如&#39;/org&#39;;</span></span>
<span class="line"><span>【推荐】路由path格式为 &#39;/模块名/页面名&#39;。</span></span>
<span class="line"><span>【推荐】全路由格式为 &#39;统一域名/项目名/[模块名/]页面名&#39;。</span></span>
<span class="line"><span>正例[推荐]: http://page.jizhibao.club/flow/approve/print</span></span>
<span class="line"><span>正例[推荐]: http://page.jizhibao.club/org/total/all-staff</span></span>
<span class="line"><span>正例: http://page.jizhibao.club/org/total/AllStaffList</span></span>
<span class="line"><span>正例: http://page.jizhibao.club/flow/flow/ConfigList</span></span></code></pre></div><h3 id="_2-2-目录命名" tabindex="-1">2.2 目录命名 <a class="header-anchor" href="#_2-2-目录命名" aria-label="Permalink to &quot;2.2 目录命名&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>【强制】全部采用小写方式，最好一个单词， 以中划线分隔，有复数结构时，要采用复数命名法， 缩写不用复数</span></span>
<span class="line"><span>scripts / styles / components / images / utils / layouts / demo-styles / demo-scripts / img / doc</span></span></code></pre></div><h3 id="_2-3-文件命名" tabindex="-1">2.3 文件命名 <a class="header-anchor" href="#_2-3-文件命名" aria-label="Permalink to &quot;2.3 文件命名&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>【强制】JS、CSS、less、PNG文件全部采用小写方式， 以中划线分隔。render-dom.js / signup.css / company-logo.png</span></span>
<span class="line"><span>【强制】页面名用大驼峰和小写中划线拼接都可以，不得超过三个单词，前缀为模块名。</span></span>
<span class="line"><span>正例：【推荐】flow-config.vue、FlowConfigList.vue、</span></span></code></pre></div><h3 id="_2-4-js-命名" tabindex="-1">2.4 JS 命名 <a class="header-anchor" href="#_2-4-js-命名" aria-label="Permalink to &quot;2.4 JS 命名&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>【强制】方法、参数、变量命名采用小写驼峰命名 lowerCamelCase。</span></span>
<span class="line"><span>【强制】常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。</span></span>
<span class="line"><span>【推荐】class类、构造函数使用大驼峰命名UpperCamelCase。</span></span></code></pre></div><h3 id="_2-5-css-命名" tabindex="-1">2.5 CSS 命名 <a class="header-anchor" href="#_2-5-css-命名" aria-label="Permalink to &quot;2.5 CSS 命名&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>【推荐】一般将css分为两大类，</span></span>
<span class="line"><span>基础型：.name .text-center...</span></span>
<span class="line"><span>模块型/组件型: BEM命名规则（模块 &gt; 元素 &gt; 修饰符 ）（el-table&gt; el-table__header&gt; cell）</span></span></code></pre></div><h2 id="_3-vue-规范" tabindex="-1">3.VUE 规范 <a class="header-anchor" href="#_3-vue-规范" aria-label="Permalink to &quot;3.VUE 规范&quot;">​</a></h2><h3 id="_3-1-语义化标签" tabindex="-1">3.1 语义化标签 <a class="header-anchor" href="#_3-1-语义化标签" aria-label="Permalink to &quot;3.1 语义化标签&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>优先使用elementUI框架组件标签(el-container,el-mainer...)</span></span>
<span class="line"><span>其次使用HTML5的语义化标签(header/section/footer/nav)</span></span></code></pre></div><h3 id="_3-2-组件的-prop-定义应该尽量详细" tabindex="-1">3.2 组件的 Prop 定义应该尽量详细 <a class="header-anchor" href="#_3-2-组件的-prop-定义应该尽量详细" aria-label="Permalink to &quot;3.2 组件的 Prop 定义应该尽量详细&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>必须使用 camelCase 驼峰命名</span></span>
<span class="line"><span>必须指定类型</span></span>
<span class="line"><span>必须加上注释，表明其含义</span></span>
<span class="line"><span>必须加上 required 或者 default，两者二选其一</span></span>
<span class="line"><span>如果有业务需要，必须加上 validator 验证</span></span></code></pre></div><h3 id="_3-3-模板中使用简单的表达式" tabindex="-1">3.3 模板中使用简单的表达式 <a class="header-anchor" href="#_3-3-模板中使用简单的表达式" aria-label="Permalink to &quot;3.3 模板中使用简单的表达式&quot;">​</a></h3><p>组件模板应该只包含简单的表达式，复杂的表达式则应该重构为计算属性或方法。</p><h3 id="_3-4-指令都使用缩写形式" tabindex="-1">3.4 指令都使用缩写形式 <a class="header-anchor" href="#_3-4-指令都使用缩写形式" aria-label="Permalink to &quot;3.4 指令都使用缩写形式&quot;">​</a></h3><p>指令推荐都使用缩写形式，(用 : 表示 v-bind: 、用 @ 表示 v-on: 和用 # 表示 v-slot:)</p><h3 id="_3-5-必须为-v-for-设置键值-key" tabindex="-1">3.5 必须为 v-for 设置键值 key <a class="header-anchor" href="#_3-5-必须为-v-for-设置键值-key" aria-label="Permalink to &quot;3.5 必须为 v-for 设置键值 key&quot;">​</a></h3><h3 id="_3-6-v-show-与-v-if-选择" tabindex="-1">3.6 v-show 与 v-if 选择 <a class="header-anchor" href="#_3-6-v-show-与-v-if-选择" aria-label="Permalink to &quot;3.6 v-show 与 v-if 选择&quot;">​</a></h3><p>如果运行时，需要非常频繁地切换，使用 v-show ；如果在运行时，条件很少改变，使用 v-if。</p><h3 id="_3-7-script-标签内部结构顺序" tabindex="-1">3.7 script 标签内部结构顺序 <a class="header-anchor" href="#_3-7-script-标签内部结构顺序" aria-label="Permalink to &quot;3.7 script 标签内部结构顺序&quot;">​</a></h3><p>components &gt; props &gt; data &gt; computed &gt; watch &gt; filter &gt; 钩子函数（钩子函数按其执行顺序） &gt; methods</p><h3 id="_3-8-vue-router-规范" tabindex="-1">3.8 Vue Router 规范 <a class="header-anchor" href="#_3-8-vue-router-规范" aria-label="Permalink to &quot;3.8 Vue Router 规范&quot;">​</a></h3><p>页面跳转数据传递使用路由参数 使用路由懒加载（延迟加载）机制</p><h3 id="_3-9-组件封装" tabindex="-1">3.9 组件封装 <a class="header-anchor" href="#_3-9-组件封装" aria-label="Permalink to &quot;3.9 组件封装&quot;">​</a></h3><p>【推荐】被多个页面或模块公用的页面可拆分为组件 【推荐】页面代码多功能多可按模块拆分组件 【推荐】被多个项目共用的代码可考虑拆分为公共组件或函数</p><h3 id="_3-10-其他" tabindex="-1">3.10 其他 <a class="header-anchor" href="#_3-10-其他" aria-label="Permalink to &quot;3.10 其他&quot;">​</a></h3><p>尽量不要手动操作 DOM 适时删除无用代码</p><h2 id="_4-css-规范" tabindex="-1">4.CSS 规范 <a class="header-anchor" href="#_4-css-规范" aria-label="Permalink to &quot;4.CSS 规范&quot;">​</a></h2><h3 id="_4-1-样式遵循-ui-标准规范" tabindex="-1">4.1 样式遵循 UI 标准规范 <a class="header-anchor" href="#_4-1-样式遵循-ui-标准规范" aria-label="Permalink to &quot;4.1 样式遵循 UI 标准规范&quot;">​</a></h3><h3 id="_4-2-缩进" tabindex="-1">4.2 缩进 <a class="header-anchor" href="#_4-2-缩进" aria-label="Permalink to &quot;4.2 缩进&quot;">​</a></h3><p>html，js 和 css 的缩进统一使用 4 个空格（一个 tab）</p><h3 id="_4-3-自定义-css-规范" tabindex="-1">4.3 自定义 CSS 规范 <a class="header-anchor" href="#_4-3-自定义-css-规范" aria-label="Permalink to &quot;4.3 自定义 CSS 规范&quot;">​</a></h3><p>尽量使用缩写属性。background:#f00 url(logo.png) no-repeat left center/60px auto; 省略 0 后面的单位。 禁止使用 ID 选择器及全局标签选择器防止污染全局样式。</p><h3 id="_4-5-less-规范" tabindex="-1">4.5 LESS 规范 <a class="header-anchor" href="#_4-5-less-规范" aria-label="Permalink to &quot;4.5 LESS 规范&quot;">​</a></h3><p>预处理器统一使用 less（sass 安装包有点慢）。 按@import、变量声明、样式声明的顺序组织。 避免嵌套层级过多，控制在 4 级嵌套内，当可读性受到影响时，将之打断。</p><h2 id="_5-js-规范" tabindex="-1">5.JS 规范 <a class="header-anchor" href="#_5-js-规范" aria-label="Permalink to &quot;5.JS 规范&quot;">​</a></h2><h3 id="_5-1-符合模板项目的-eslint-校验规则" tabindex="-1">5.1 符合模板项目的 ESlint 校验规则 <a class="header-anchor" href="#_5-1-符合模板项目的-eslint-校验规则" aria-label="Permalink to &quot;5.1 符合模板项目的 ESlint 校验规则&quot;">​</a></h3><h3 id="_5-2-条件判断和循环最多三层" tabindex="-1">5.2 条件判断和循环最多三层 <a class="header-anchor" href="#_5-2-条件判断和循环最多三层" aria-label="Permalink to &quot;5.2 条件判断和循环最多三层&quot;">​</a></h3><h3 id="_5-3-工具库" tabindex="-1">5.3 工具库 <a class="header-anchor" href="#_5-3-工具库" aria-label="Permalink to &quot;5.3 工具库&quot;">​</a></h3><p>【推荐】时间处理：day.js <a href="https://dayjs.fenxianglu.cn/" target="_blank" rel="noreferrer">https://dayjs.fenxianglu.cn/</a> 【推荐】工具函数：lodash.js <a href="https://www.lodashjs.com/" target="_blank" rel="noreferrer">https://www.lodashjs.com/</a></p><h2 id="_6-接口规范" tabindex="-1">6.接口规范 <a class="header-anchor" href="#_6-接口规范" aria-label="Permalink to &quot;6.接口规范&quot;">​</a></h2><p>【强制】不要自行组建 api.js，使用系统生成的，不容易出错</p><h3 id="_6-1-统一接口放到-src-api-目录下" tabindex="-1">6.1 统一接口放到 src/api 目录下 <a class="header-anchor" href="#_6-1-统一接口放到-src-api-目录下" aria-label="Permalink to &quot;6.1 统一接口放到 src/api 目录下&quot;">​</a></h3><h3 id="_6-2-java-微服务-api-下载地址-没有找到就找后端" tabindex="-1">6.2 JAVA 微服务 API 下载地址，没有找到就找后端 <a class="header-anchor" href="#_6-2-java-微服务-api-下载地址-没有找到就找后端" aria-label="Permalink to &quot;6.2 JAVA 微服务 API 下载地址，没有找到就找后端&quot;">​</a></h3><p><a href="http://192.168.0.160/apidocs/projects/" target="_blank" rel="noreferrer">http://192.168.0.160/apidocs/projects/</a></p><h3 id="_6-3-api-生成格式示例" tabindex="-1">6.3 API 生成格式示例 <a class="header-anchor" href="#_6-3-api-生成格式示例" aria-label="Permalink to &quot;6.3 API 生成格式示例&quot;">​</a></h3><h3 id="_6-4-调用示例-按需引入" tabindex="-1">6.4 调用示例：按需引入 <a class="header-anchor" href="#_6-4-调用示例-按需引入" aria-label="Permalink to &quot;6.4 调用示例：按需引入&quot;">​</a></h3><div class="language-JavaScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {duty} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@/api/org.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//1.分页查询</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> queryDataList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> params </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        comId:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.comId,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        page: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.page.pageCurrent,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        size: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.page.pageSize,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        keywords: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.keyword</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    duty.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">listPaged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(params).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (res.code </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;30000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.dataList </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.records;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.page.total </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.total;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$layer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res.msg);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//2.新增</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> saveDuty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> duty.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ruleForm});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (res.code </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;30000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.visibleDrawer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//关闭弹窗</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">queryDataList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$layer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;保存成功&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$layer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res.msg);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_6-5-依赖声明-在-readme-md-写入当前项目内包含的-api-js-说明" tabindex="-1">6.5 依赖声明：在 README.md 写入当前项目内包含的 api.js 说明 <a class="header-anchor" href="#_6-5-依赖声明-在-readme-md-写入当前项目内包含的-api-js-说明" aria-label="Permalink to &quot;6.5 依赖声明：在 README.md 写入当前项目内包含的 api.js 说明&quot;">​</a></h3><h4 id="依赖的-java-api" tabindex="-1">依赖的 JAVA API <a class="header-anchor" href="#依赖的-java-api" aria-label="Permalink to &quot;依赖的 JAVA API&quot;">​</a></h4><p>org.js,file.js</p><h2 id="_7-其他规范" tabindex="-1">7.其他规范 <a class="header-anchor" href="#_7-其他规范" aria-label="Permalink to &quot;7.其他规范&quot;">​</a></h2><h3 id="_7-1-图标规范" tabindex="-1">7.1 图标规范 <a class="header-anchor" href="#_7-1-图标规范" aria-label="Permalink to &quot;7.1 图标规范&quot;">​</a></h3><p>【参考】字体图标使用 jzb-iconfont.css；(以后只加通用型图标) 【推荐】业务型图标按业务自行创建图标库本地引入</p><h3 id="_7-2-注释规范" tabindex="-1">7.2 注释规范 <a class="header-anchor" href="#_7-2-注释规范" aria-label="Permalink to &quot;7.2 注释规范&quot;">​</a></h3><p>整理必须加注释的地方 公共组件使用说明 api 目录的接口 js 文件必须加注释 store 中的 state, mutation, action 等必须加注释 vue 文件中的 template 必须加注释(或在路由中加注释)，若文件较大添加 start end 注释 vue 文件的 methods，每个 method 必须添加注释 vue 文件的 data, 非常见单词要加注释，属性较多必须分类注释 方法或 data 参数较多时最好分组注释。例如</p><h3 id="_7-3-git-代码提交规范" tabindex="-1">7.3 git 代码提交规范 <a class="header-anchor" href="#_7-3-git-代码提交规范" aria-label="Permalink to &quot;7.3 git 代码提交规范&quot;">​</a></h3><p>详见 <a href="https://jizhibao.yuque.com/jizhibao/ogahge/ner26l" target="_blank" rel="noreferrer">https://jizhibao.yuque.com/jizhibao/ogahge/ner26l</a></p><h3 id="_7-4-vscode-配置" tabindex="-1">7.4 Vscode 配置 <a class="header-anchor" href="#_7-4-vscode-配置" aria-label="Permalink to &quot;7.4 Vscode 配置&quot;">​</a></h3><p><a href="https://jizhibao.yuque.com/jizhibao/ogahge/ybdiqr" target="_blank" rel="noreferrer">https://jizhibao.yuque.com/jizhibao/ogahge/ybdiqr</a></p><h3 id="_7-5-git-分支策略" tabindex="-1">7.5 git 分支策略 <a class="header-anchor" href="#_7-5-git-分支策略" aria-label="Permalink to &quot;7.5 git 分支策略&quot;">​</a></h3><p>master =&gt; dev =&gt; 个人分支</p>`,79)]))}const g=s(t,[["render",l]]);export{c as __pageData,g as default};
