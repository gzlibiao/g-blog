import{_ as i,o as a,c as l,a6 as n}from"./chunks/framework.DxlwMnnj.js";const E=JSON.parse('{"title":"Blob","description":"","frontmatter":{"tag":["前端","JavaScript"]},"headers":[],"relativePath":"articles/javascript基础/blob.md","filePath":"articles/javascript基础/blob.md"}'),t={name:"articles/javascript基础/blob.md"};function h(e,s,p,k,r,o){return a(),l("div",{"data-pagefind-body":!0},s[0]||(s[0]=[n(`<h1 id="blob" tabindex="-1">Blob <a class="header-anchor" href="#blob" aria-label="Permalink to &quot;Blob&quot;">​</a></h1><h2 id="什么是-blob" tabindex="-1">什么是 Blob <a class="header-anchor" href="#什么是-blob" aria-label="Permalink to &quot;什么是 Blob&quot;">​</a></h2><p>Blob，Binary Large Object，二进制大对象，是 JavaScript 中的一个对象，表示不可变的、原始数据的类文件对象。</p><h2 id="blob-的用途" tabindex="-1">Blob 的用途 <a class="header-anchor" href="#blob-的用途" aria-label="Permalink to &quot;Blob 的用途&quot;">​</a></h2><p>Blob 通常用于表示二进制数据，可以用来表示文件内容。它可以用来创建文件对象，也可以用来创建 URL，以便在网页上显示或下载文件。</p><h2 id="blob-的属性和方法" tabindex="-1">Blob 的属性和方法 <a class="header-anchor" href="#blob-的属性和方法" aria-label="Permalink to &quot;Blob 的属性和方法&quot;">​</a></h2><p>Blob 对象有以下属性：</p><ul><li>size：表示 Blob 对象的大小，以字节为单位。</li><li>type：表示 Blob 对象的 MIME 类型。</li></ul><p>Blob 对象有以下方法：</p><ul><li>slice(start, end, contentType)：返回一个新的 Blob 对象，表示 Blob 对象的一部分数据。start 和 end 是可选的，表示要截取的数据的起始和结束位置。contentType 是可选的，表示新的 Blob 对象的 MIME 类型。</li><li>stream()：返回一个 ReadableStream 对象，可以用来读取 Blob 对象的数据。</li><li>text()：返回一个 Promise 对象，表示 Blob 对象的文本内容。</li><li>arrayBuffer()：返回一个 Promise 对象，表示 Blob 对象的 ArrayBuffer 数据。</li></ul><h2 id="blob-的使用示例" tabindex="-1">Blob 的使用示例 <a class="header-anchor" href="#blob-的使用示例" aria-label="Permalink to &quot;Blob 的使用示例&quot;">​</a></h2><p>下面是一个使用 Blob 对象的示例：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建一个 Blob 对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> blob</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Blob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello, world!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;text/plain&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建一个 URL，以便在网页上显示或下载文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createObjectURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(blob);  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> link</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">link.href </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> url;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">link.download </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;hello.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.body.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appendChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(link);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">link.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.body.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(link);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 读取 Blob 对象的文本内容</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">blob.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出：Hello, world!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>在上面的示例中，我们首先创建了一个 Blob 对象，表示一个文本文件。然后，我们使用 URL.createObjectURL() 方法创建了一个 URL，以便在网页上显示或下载文件。最后，我们使用 blob.text() 方法读取了 Blob 对象的文本内容，并将其输出到控制台。</p>`,14)]))}const b=i(t,[["render",h]]);export{E as __pageData,b as default};
