import{_ as n,o as a,c as e,a as l}from"./app.d0abd10b.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"sentinel ali 流量卫兵","slug":"sentinel-ali-流量卫兵","link":"#sentinel-ali-流量卫兵","children":[]},{"level":2,"title":"eureka 三步","slug":"eureka-三步","link":"#eureka-三步","children":[]},{"level":2,"title":"负载均衡策略","slug":"负载均衡策略","link":"#负载均衡策略","children":[]},{"level":2,"title":"nacos","slug":"nacos","link":"#nacos","children":[]},{"level":2,"title":"namespace 和 cluster 区别","slug":"namespace-和-cluster-区别","link":"#namespace-和-cluster-区别","children":[]},{"level":2,"title":"feign","slug":"feign","link":"#feign","children":[]},{"level":2,"title":"sentinel 流控 、降级处理、监控","slug":"sentinel-流控-、降级处理、监控","link":"#sentinel-流控-、降级处理、监控","children":[]},{"level":2,"title":"断路器的三个状态","slug":"断路器的三个状态","link":"#断路器的三个状态","children":[]},{"level":2,"title":"流控模式","slug":"流控模式","link":"#流控模式","children":[]},{"level":2,"title":"seata 分布式事务","slug":"seata-分布式事务","link":"#seata-分布式事务","children":[]}],"relativePath":"docs/java/springcloud.md"}'),p={name:"docs/java/springcloud.md"};function r(i,s,c,t,o,d){return a(),e("div",null,s[0]||(s[0]=[l(`<h2 id="sentinel-ali-流量卫兵" tabindex="-1">sentinel ali 流量卫兵 <a class="header-anchor" href="#sentinel-ali-流量卫兵" aria-hidden="true">#</a></h2><h2 id="eureka-三步" tabindex="-1">eureka 三步 <a class="header-anchor" href="#eureka-三步" aria-hidden="true">#</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">1.配eurekaserver eureka.client.service-url.defaultZone: eurekaserver地址相同因为要集群</span></span>
<span class="line"><span style="color:#A6ACCD;">2.用户订单微服务注册到eurekaserver中</span></span>
<span class="line"><span style="color:#A6ACCD;">3.服务发现将eureka的配置信息copy到微服务中去</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="负载均衡策略" tabindex="-1">负载均衡策略 <a class="header-anchor" href="#负载均衡策略" aria-hidden="true">#</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">随机</span></span>
<span class="line"><span style="color:#A6ACCD;">轮询</span></span>
<span class="line"><span style="color:#A6ACCD;">restryrule （重试）</span></span>
<span class="line"><span style="color:#A6ACCD;">clientconfigurationloadbalancerule （客户端轮询）</span></span>
<span class="line"><span style="color:#A6ACCD;">默认根据时区选择 轮询</span></span>
<span class="line"><span style="color:#A6ACCD;">重写轮询算法实现irule接口</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="nacos" tabindex="-1">nacos <a class="header-anchor" href="#nacos" aria-hidden="true">#</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">服务分级存储模型</span></span>
<span class="line"><span style="color:#A6ACCD;">1级服务</span></span>
<span class="line"><span style="color:#A6ACCD;">2级集群</span></span>
<span class="line"><span style="color:#A6ACCD;">3级地域</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="namespace-和-cluster-区别" tabindex="-1">namespace 和 cluster 区别 <a class="header-anchor" href="#namespace-和-cluster-区别" aria-hidden="true">#</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">namespace环境隔离,完全隔离不通namespace之间的服务不能访问,根据namespaceid划分</span></span>
<span class="line"><span style="color:#A6ACCD;">cluster 地域划分，相同地域优先访问，其次去找其他地域的集群</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">ephemeral 区分临时实例和非临时实例 健康状态变了  亲生和非亲生</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">nacos和eureka区别</span></span>
<span class="line"><span style="color:#A6ACCD;">nacos当服务服务不可用时会主动推送消息告诉服务调用者,eureka则不会</span></span>
<span class="line"><span style="color:#A6ACCD;">server1-&gt;30秒一次pull&gt;server3 (eureka)</span></span>
<span class="line"><span style="color:#A6ACCD;">service2-&gt;pull-&gt;&lt;push&lt;(nacos)</span></span>
<span class="line"><span style="color:#A6ACCD;">cap模式 (一致性，可用性，分区容错性)</span></span>
<span class="line"><span style="color:#A6ACCD;">一致性和可用性不可能同时存在</span></span>
<span class="line"><span style="color:#A6ACCD;">eureka ap模式</span></span>
<span class="line"><span style="color:#A6ACCD;">nacos ap模式当服务提供者中有非临时实例则会变化成为cp模式</span></span>
<span class="line"><span style="color:#A6ACCD;">当订单交易的时候选择cp</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="feign" tabindex="-1">feign <a class="header-anchor" href="#feign" aria-hidden="true">#</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">加入依赖</span></span>
<span class="line"><span style="color:#A6ACCD;">@enabledfeignclients</span></span>
<span class="line"><span style="color:#A6ACCD;">写client</span></span>
<span class="line"><span style="color:#A6ACCD;">@feignclien(&quot;service&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">@get(&quot;*&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="sentinel-流控-、降级处理、监控" tabindex="-1">sentinel 流控 、降级处理、监控 <a class="header-anchor" href="#sentinel-流控-、降级处理、监控" aria-hidden="true">#</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">线程隔离两种方式</span></span>
<span class="line"><span style="color:#A6ACCD;">线程池隔离，信号量（默认）</span></span>
<span class="line"><span style="color:#A6ACCD;">超时异步</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="断路器的三个状态" tabindex="-1">断路器的三个状态 <a class="header-anchor" href="#断路器的三个状态" aria-hidden="true">#</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">closed open 半开</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="流控模式" tabindex="-1">流控模式 <a class="header-anchor" href="#流控模式" aria-hidden="true">#</a></h2><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">直接,关联,链路</span></span>
<span class="line"><span style="color:#A6ACCD;">流控效果</span></span>
<span class="line"><span style="color:#A6ACCD;">快速失败, 渐变 3 默认 ，等待</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="seata-分布式事务" tabindex="-1">seata 分布式事务 <a class="header-anchor" href="#seata-分布式事务" aria-hidden="true">#</a></h2>`,18)]))}const C=n(p,[["render",r]]);export{b as __pageData,C as default};
