import{_ as n,o as a,c as l,a as p}from"./app.d0abd10b.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"SpringBoot 常用注解","slug":"springboot-常用注解","link":"#springboot-常用注解","children":[{"level":3,"title":"一、注解(annotations)列表","slug":"一、注解-annotations-列表","link":"#一、注解-annotations-列表","children":[]},{"level":3,"title":"二、注解(annotations)详解","slug":"二、注解-annotations-详解","link":"#二、注解-annotations-详解","children":[]}]},{"level":2,"title":"Spring Boot 中 6 种 注入 Bean 的方式","slug":"spring-boot-中-6-种-注入-bean-的方式","link":"#spring-boot-中-6-种-注入-bean-的方式","children":[]}],"relativePath":"docs/java/springboot.md"}'),o={name:"docs/java/springboot.md"};function e(r,s,c,t,D,y){return a(),l("div",null,s[0]||(s[0]=[p(`<h2 id="springboot-常用注解" tabindex="-1">SpringBoot 常用注解 <a class="header-anchor" href="#springboot-常用注解" aria-hidden="true">#</a></h2><h3 id="一、注解-annotations-列表" tabindex="-1">一、注解(annotations)列表 <a class="header-anchor" href="#一、注解-annotations-列表" aria-hidden="true">#</a></h3><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootApplication</span><span style="color:#A6ACCD;">：</span></span>
<span class="line"><span style="color:#A6ACCD;">包含了</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ComponentScan</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span><span style="color:#A6ACCD;"> 和</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">EnableAutoConfiguration</span><span style="color:#A6ACCD;"> 注解。其中</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ComponentScan</span><span style="color:#A6ACCD;"> 让 </span><span style="color:#C792EA;">Spring</span><span style="color:#A6ACCD;"> Boot 扫描到 Configuration 类并把它加入到程序上下文。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span><span style="color:#A6ACCD;"> 等同于 Spring 的 XML 配置文件；使用 Java 代码可以检查类型安全。</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">EnableAutoConfiguration</span><span style="color:#A6ACCD;"> 自动配置。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ComponentScan</span><span style="color:#A6ACCD;"> 组件扫描，可自动发现和装配一些 Bean。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span><span style="color:#A6ACCD;"> 可配合 CommandLineRunner 使用，在程序启动后执行一些基础任务。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RestController</span><span style="color:#A6ACCD;"> 注解是</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span><span style="color:#A6ACCD;"> 和</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ResponseBody</span><span style="color:#A6ACCD;"> 的合集</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">表示这是个控制器 bean</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">并且是将函数的返回值直接填入 HTTP 响应体中</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">是 REST 风格的控制器。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span><span style="color:#A6ACCD;"> 自动导入。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">PathVariable</span><span style="color:#A6ACCD;"> 获取参数。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">JsonBackReference</span><span style="color:#A6ACCD;"> 解决嵌套外链问题。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RepositoryRestResourcepublic</span><span style="color:#A6ACCD;"> 配合 spring</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">boot</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">starter</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">rest 使用。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="二、注解-annotations-详解" tabindex="-1">二、注解(annotations)详解 <a class="header-anchor" href="#二、注解-annotations-详解" aria-hidden="true">#</a></h3><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootApplication</span><span style="color:#A6ACCD;">：声明让 </span><span style="color:#C792EA;">Spring</span><span style="color:#A6ACCD;"> Boot 自动给程序进行必要的配置，这个配置等同于：</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span><span style="color:#A6ACCD;"> ，</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">EnableAutoConfiguration</span><span style="color:#A6ACCD;"> 和 </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ComponentScan</span><span style="color:#A6ACCD;"> 三个配置。</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ResponseBody</span><span style="color:#A6ACCD;">：表示该方法的返回结果直接写入 </span><span style="color:#C792EA;">HTTP</span><span style="color:#A6ACCD;"> response body 中，一般在异步获取数据时使用，用于构建 RESTful 的 api。在使用</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#A6ACCD;"> 后，返回值通常解析为跳转路径，加上</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ResponseBody</span><span style="color:#A6ACCD;"> 后返回结果不会被解析为跳转路径，而是直接写入 </span><span style="color:#C792EA;">HTTP</span><span style="color:#A6ACCD;"> response body 中。比如异步获取 json 数据，加上</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ResponseBody</span><span style="color:#A6ACCD;"> 后，会直接返回 json 数据。该注解一般会配合</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#A6ACCD;"> 一起使用。示例代码：</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span><span style="color:#A6ACCD;">：用于定义控制器类，在 Spring 项目中由控制器负责将用户发来的 URL 请求转发到对应的服务接口（service 层），一般这个注解在类中，通常方法需要配合注解</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#A6ACCD;">。示例代码：</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RestController：用于标注控制层组件</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">如 struts 中的 action</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">，</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ResponseBody</span><span style="color:#A6ACCD;"> 和</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span><span style="color:#A6ACCD;"> 的结合。示例代码：</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">web</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">bind</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">org</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">springframework</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">web</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">bind</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">annotation</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">RestController</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RestController</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/demoInfo2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">publicclass DemoController2 </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ok</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-palenight"><code><span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#A6ACCD;">：提供路由信息，负责 URL 到 Controller 中的具体函数的映射。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">EnableAutoConfiguration</span><span style="color:#A6ACCD;">：</span><span style="color:#C792EA;">Spring</span><span style="color:#A6ACCD;"> Boot 自动配置（auto</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">configuration）：尝试根据添加的 jar 依赖自动配置 Spring 应用。例如，如果 classpath 下存在 HSQLDB，并且没有手动配置任何数据库连接 beans，那么将自动配置一个内存型（in</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">memory）数据库”。可以将</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">EnableAutoConfiguration</span><span style="color:#A6ACCD;"> 或者</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">SpringBootApplication</span><span style="color:#A6ACCD;"> 注解添加到一个</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span><span style="color:#A6ACCD;"> 类上来选择自动配置。如果发现应用了不想要的特定自动配置类，可以使用</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">EnableAutoConfiguration</span><span style="color:#A6ACCD;"> 注解的排除属性来禁用它们。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ComponentScan</span><span style="color:#A6ACCD;">：表示将该类自动发现扫描组件。个人理解相当于，如果扫描到有</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span><span style="color:#A6ACCD;">、</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span><span style="color:#A6ACCD;">、</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Service</span><span style="color:#A6ACCD;"> 等这些注解的类，并注册为 Bean，可以自动收集所有的 Spring 组件，包括</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span><span style="color:#A6ACCD;"> 类。经常使用</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ComponentScan</span><span style="color:#A6ACCD;"> 注解搜索 beans，并结合</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span><span style="color:#A6ACCD;"> 注解导入。可以自动收集所有的 Spring 组件，包括</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span><span style="color:#A6ACCD;"> 类。</span></span>
<span class="line"><span style="color:#A6ACCD;">经常使用</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ComponentScan</span><span style="color:#A6ACCD;"> 注解搜索 beans，并结合</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span><span style="color:#A6ACCD;"> 注解导入。如果没有配置的话，</span><span style="color:#C792EA;">Spring</span><span style="color:#A6ACCD;"> Boot 会扫描启动类所在包下以及子包下的使用了</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Service</span><span style="color:#A6ACCD;">，</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Repository</span><span style="color:#A6ACCD;"> 等注解的类。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span><span style="color:#A6ACCD;">：相当于传统的 xml 配置文件，如果有些第三方库需要用到 xml 文件，建议仍然通过</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span><span style="color:#A6ACCD;"> 类作为项目的配置主类——可以使用</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ImportResource</span><span style="color:#A6ACCD;"> 注解加载 xml 配置文件。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Import</span><span style="color:#A6ACCD;">：用来导入其他配置类。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ImportResource</span><span style="color:#A6ACCD;">：用来加载 xml 配置文件。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span><span style="color:#A6ACCD;">：自动导入依赖的 bean</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Service</span><span style="color:#A6ACCD;">：一般用于修饰 service 层的组件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Repository</span><span style="color:#A6ACCD;">：使用</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Repository</span><span style="color:#A6ACCD;"> 注解可以确保 DAO 或者 repositories 提供异常转译，这个注解修饰的 DAO 或者 repositories 类会被 ComponetScan 发现并配置，同时也不需要为它们提供 XML 配置项。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span><span style="color:#A6ACCD;">：用</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span><span style="color:#A6ACCD;"> 标注方法等价于 XML 中配置的 bean。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Value</span><span style="color:#A6ACCD;">：注入 </span><span style="color:#C792EA;">Spring</span><span style="color:#A6ACCD;"> boot application</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">properties 配置的属性的值。示例代码：</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Value</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> “$</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">message</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">”</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> message</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Inject</span><span style="color:#A6ACCD;">：等价于默认的</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span><span style="color:#A6ACCD;">，只是没有 required 属性；</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span><span style="color:#A6ACCD;">：泛指组件，当组件不好归类的时候，可以使用这个注解进行标注。</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;">相当于 XML 中的</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">放在方法的上面，而不是类，意思是产生一个 bean</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">并交给 Spring 管理。</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">AutoWired</span><span style="color:#A6ACCD;">：自动导入依赖的 bean。byType 方式。把配置好的 Bean 拿来用，完成属性、方法的组装，它可以对类成员变量、方法及构造函数进行标注，完成自动装配的工作。当加上（required</span><span style="color:#89DDFF;">=false</span><span style="color:#A6ACCD;">）时，就算找不到 bean 也不报错。</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Qualifier</span><span style="color:#A6ACCD;">：当有多个同一类型的 Bean 时，可以用</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Qualifier</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">来指定。与</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span><span style="color:#A6ACCD;"> 配合使用。</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Qualifier</span><span style="color:#A6ACCD;"> 限定描述符除了能根据名字进行注入，但能进行更细粒度的控制如何选择候选者，具体使用方式如下：</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="spring-boot-中-6-种-注入-bean-的方式" tabindex="-1">Spring Boot 中 6 种 注入 Bean 的方式 <a class="header-anchor" href="#spring-boot-中-6-种-注入-bean-的方式" aria-hidden="true">#</a></h2><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">谈到Spring的时候一定会提到IOC容器、DI依赖注入，Spring通过将一个个类标注为Bean的方法注入到IOC容器中，达到了控制反转的效果。那么刚开始接触Bean的时候，一定是使用xml文件，一个一个的注入，就例如下面这样。</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">bean id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bean</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">beandemo.Bean</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">项目一般很大的话，就需要成千上百个Bean去使用，这样写起来就很繁琐。那么Spring实现了一种通过注解来实现注入的方法。只需要在你需要注入的类前面加上相应的注解，Spring就会扫描到他们去实现注入。</span></span>
<span class="line"><span style="color:#A6ACCD;">xml扫描包的方式</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">context</span><span style="color:#89DDFF;font-style:italic;">:</span><span style="color:#A6ACCD;">component</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">scan base</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">package</span><span style="color:#C792EA;">=&quot;com</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">company</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">beandemo&quot;/&gt;</span></span>
<span class="line"><span style="color:#C792EA;">通过注解注入的一般形式</span></span>
<span class="line"><span style="color:#C792EA;">一般情况下，注入Bean有一个最直白，最易懂的方式去实现注入，下面废话先不多说，先贴代码。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">● Bean类</span></span>
<span class="line"><span style="color:#C792EA;">public class MyBean{</span></span>
<span class="line"><span style="color:#C792EA;">}</span></span>
<span class="line"><span style="color:#C792EA;">● Configuration类</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//创建一个class配置文件</span></span>
<span class="line"><span style="color:#C792EA;">@Configuration</span></span>
<span class="line"><span style="color:#C792EA;">public class MyConfiguration{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//将一个Bean交由Spring进行管理</span></span>
<span class="line"><span style="color:#C792EA;">    @Bean</span></span>
<span class="line"><span style="color:#C792EA;">    public MyBean myBean(){</span></span>
<span class="line"><span style="color:#C792EA;">        return new MyBean()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">● </span><span style="color:#C792EA;">Test类</span></span>
<span class="line"><span style="color:#A6ACCD;">与xml有一点不同，这里在Test中，实例化的不再是ClassPathXmlApplicationContext，而是获取的AnnotationConfigApplicationContext实例。</span></span>
<span class="line"><span style="color:#C792EA;">ApplicationContext</span><span style="color:#A6ACCD;"> context </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">AnnotationConfigApplicationContext</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">MyConfiguration</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">MyBean</span><span style="color:#A6ACCD;"> myBean </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cotext</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBean</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">myBean</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">MyBean</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">myBean = </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> myBean</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">上面的代码中MyBean也就是需要Spring去管理的一个Bean，他只是一个简单的类。而MyConfiguration中，首先用</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration注解去标记了该类</span><span style="color:#A6ACCD;">，这样标明该类是一个Spring的一个配置类，在加载配置的时候会去加载他。</span></span>
<span class="line"><span style="color:#A6ACCD;">在MyConfiguration中可以看到有一个方法返回的是一个MyBean的实例，并且该方法上标注着</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean的注解</span><span style="color:#A6ACCD;">，标明这是一个注入Bean的方法，会将下面的返回的Bean注入IOC。</span></span>
<span class="line"><span style="color:#A6ACCD;">通过构造方法注入Bean</span></span>
<span class="line"><span style="color:#A6ACCD;">在生成一个Bean实例的时候，可以使用Bean的构造方法将Bean实现注入。直接看代码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">● </span><span style="color:#C792EA;">Bean类</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyBeanConstructor</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">AnotherBean</span><span style="color:#A6ACCD;"> anotherBeanConstructor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MyBeanConstructor</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">AnotherBean</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">anotherBeanConstructor</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">anotherBeanConstructor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anotherBeanConstructor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">toString</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyBean{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">anotherBeanConstructor=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> anotherBeanConstructor </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">● </span><span style="color:#C792EA;">AnotherBean类</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Bean的id，默认为类名小驼峰</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">AnotherBean</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">● </span><span style="color:#C792EA;">Configuration类</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ComponentScan</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.company.annotationbean</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyConfiguration</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">这里可以发现，和一般方式注入的代码不一样了，来看看新的注解都是什么意思：</span></span>
<span class="line"><span style="color:#A6ACCD;">● </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">AutoWired</span></span>
<span class="line"><span style="color:#A6ACCD;">简单粗暴，直接翻译过来的意思就是自动装配，还不理解为什么叫自动装配？看了下一个注解的解释你就知道了。若是在这里注入的时候指定一个Bean的id就要使用</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Qualifier注解</span></span>
<span class="line"><span style="color:#A6ACCD;">● </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span><span style="color:#A6ACCD;">（默认单例模式）</span></span>
<span class="line"><span style="color:#A6ACCD;">翻译过来是零件，感觉像是修汽车？是的，Spring管理Bean的方法就是修汽车的方式。在需要将一个类变成一个Bean被Spring可以注入的时候加上注解零件</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Conmonent</span><span style="color:#A6ACCD;">，那么就可以在加载Bean的时候把他像零件一样装配到这个IOC汽车上了</span></span>
<span class="line"><span style="color:#A6ACCD;">在这里还有几个其他的注解也可以实现这个功能，也就是细化的</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span><span style="color:#A6ACCD;">：</span></span>
<span class="line"><span style="color:#A6ACCD;">● </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span><span style="color:#A6ACCD;"> 标注在Controller层</span></span>
<span class="line"><span style="color:#A6ACCD;">● </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Service</span><span style="color:#A6ACCD;"> 标注在Service层</span></span>
<span class="line"><span style="color:#A6ACCD;">● </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Repository</span><span style="color:#A6ACCD;"> 标注在dao层</span></span>
<span class="line"><span style="color:#A6ACCD;">● </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ComponentScan</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">还是翻译，零件扫描，去看看括号里的“零件仓库”里面，哪些“零件”（类）需要被装载，Spring就会去扫描这个包，将里面所有标注了</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component的类进行注入</span><span style="color:#A6ACCD;">。</span></span>
<span class="line"><span style="color:#A6ACCD;">这里的通过构造方法进行注入就很好理解了，在装配MyBean这个零件的时候，突然发现他必须在AnotherBean的基础上才能安装到IOC里面，那么就在每次装配MyBean的时候自动装配一个AnotherBean进去。举个例子吧：</span></span>
<span class="line"><span style="color:#A6ACCD;">还是以汽车为例，在踩油门出发之前，是不是必须发车？？这里的AutoWired的内容就像发车，不发车，这个油门你踩断都没有用，他都不会走。</span></span>
<span class="line"><span style="color:#A6ACCD;">通过set方法注入Bean</span></span>
<span class="line"><span style="color:#A6ACCD;">可以在一个属性的set方法中去将Bean实现注入，看代码吧</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">● </span><span style="color:#C792EA;">MyBean类</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyBeanSet</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">AnotherBean</span><span style="color:#A6ACCD;"> anotherBeanSet</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setAnotherBeanSet</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">AnotherBean</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">anotherBeanSet</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">anotherBeanSet </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> anotherBeanSet</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">toString</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyBeanSet{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">anotherBeanSet=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> anotherBeanSet </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">● Configuration类 和 </span><span style="color:#C792EA;">Test类</span></span>
<span class="line"><span style="color:#A6ACCD;">同上一个，就不贴了</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">这里可以发现在setter方法上有一个</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">AutoWired</span><span style="color:#A6ACCD;">，与上面不同的是，不会在实例化该类时就自动装配这个对象，而是在显式调用setter的时候去装配。</span></span>
<span class="line"><span style="color:#A6ACCD;">通过属性去注入Bean</span></span>
<span class="line"><span style="color:#A6ACCD;">前面两种注入的方式诸如时间不同，并且代码较多，若是通过属性，即就是</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyBeanProperty</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">AnotherBean</span><span style="color:#A6ACCD;"> anotherBeanProperty</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">toString</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MyBeanProperty{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">anotherBeanProperty=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> anotherBeanProperty </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">这里可以看到这个类中需要使用AnotherBean这个实例对象，可以通过</span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">AutoWired去自动装配它</span><span style="color:#A6ACCD;">。</span></span>
<span class="line"><span style="color:#A6ACCD;">对于有些小伙伴问私有属性，Spring怎么去加载它到IOC的？那就是反射。</span></span>
<span class="line"><span style="color:#A6ACCD;">通过List注入Bean</span></span>
<span class="line"><span style="color:#A6ACCD;">● </span><span style="color:#C792EA;">MyBeanList类</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyBeanList</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> stringList</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setStringList</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">stringList</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">stringList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> stringList</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getStringList</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> stringList</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">● </span><span style="color:#C792EA;">MyConfiguration类</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Configuration</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">ComponentScan</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">annoBean.annotationbean</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyConfiguration</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">stringList</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> stringList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ArrayList</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">        stringList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">List-1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        stringList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">List-2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> stringList</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">这里将MyBeanList进行了注入，对List中的元素会逐一注入。下面介绍另一种方式注入List</span></span>
<span class="line"><span style="color:#A6ACCD;">● </span><span style="color:#C792EA;">MyConfiguration类</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//通过该注解设定Bean注入的优先级，不一定连续数字</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Order</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">34</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">string1</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">String-1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Order</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">14</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">string2</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">String-2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">注入与List中泛型一样的类型，会自动去匹配类型，及时这里没有任何List的感觉，只是String的类型，但他会去通过List的Bean的方式去注入。</span></span>
<span class="line"><span style="color:#A6ACCD;">第二种方式的优先级高于第一种，当两个都存在的时候，若要强制去使用第一种方式，则要去指定Bean的id即可</span></span>
<span class="line"><span style="color:#A6ACCD;">通过Map去注入Bean</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyBeanMap</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">Integer</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> integerMap</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Integer</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getIntegerMap</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> integerMap</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Autowired</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">setIntegerMap</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Integer</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">integerMap</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">integerMap </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> integerMap</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">Integer</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">integerMap</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">Map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">Integer</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> integerMap </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">HashMap</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Integer</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">    integerMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">put</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">map-1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    integerMap</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">put</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">map-2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> integerMap</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">integer1</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Bean</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Integer</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">integer2</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">同样这里也具有两种方式去注入Map类型Bean，且第二种的优先值高于第一种</span></span>
<span class="line"><span style="color:#A6ACCD;">以上就是Bean通过注解注入的几种方式，可以对比着xml注入的方式去看。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br></div></div>`,10)]))}const i=n(o,[["render",e]]);export{A as __pageData,i as default};
