import{_ as s,c as n,o as a,a as l}from"./app.116e60de.js";const i=JSON.parse('{"title":"面向对象编程","description":"","frontmatter":{},"headers":[{"level":2,"title":"原型和原型链","slug":"原型和原型链","link":"#原型和原型链","children":[{"level":3,"title":"了解原型","slug":"了解原型","link":"#了解原型","children":[]},{"level":3,"title":"原型共享","slug":"原型共享","link":"#原型共享","children":[]},{"level":3,"title":"顶级原型","slug":"顶级原型","link":"#顶级原型","children":[]},{"level":3,"title":"设置原型","slug":"设置原型","link":"#设置原型","children":[]},{"level":3,"title":"constructor 属性","slug":"constructor-属性","link":"#constructor-属性","children":[]},{"level":3,"title":"原型添加多个方法","slug":"原型添加多个方法","link":"#原型添加多个方法","children":[]}]},{"level":2,"title":"继承","slug":"继承","link":"#继承","children":[{"level":3,"title":"了解继承","slug":"了解继承","link":"#了解继承","children":[]},{"level":3,"title":"盗用构造函数继承","slug":"盗用构造函数继承","link":"#盗用构造函数继承","children":[]},{"level":3,"title":"组合继承","slug":"组合继承","link":"#组合继承","children":[]},{"level":3,"title":"原型式继承","slug":"原型式继承","link":"#原型式继承","children":[]},{"level":3,"title":"寄生式继承","slug":"寄生式继承","link":"#寄生式继承","children":[]},{"level":3,"title":"寄生式组合继承","slug":"寄生式组合继承","link":"#寄生式组合继承","children":[]},{"level":3,"title":"使用父类构造函数初始属性","slug":"使用父类构造函数初始属性","link":"#使用父类构造函数初始属性","children":[]},{"level":3,"title":"对象工厂继承","slug":"对象工厂继承","link":"#对象工厂继承","children":[]}]}],"relativePath":"docs/javascript/fun-prototype.md"}'),p={name:"docs/javascript/fun-prototype.md"},o=l("",124),e=[o];function r(c,t,y,D,F,C){return a(),n("div",null,e)}const b=s(p,[["render",r]]);export{i as __pageData,b as default};
